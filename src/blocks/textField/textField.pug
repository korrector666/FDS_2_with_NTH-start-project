//- Все примеси в этом файле должны начинаться c имени блока (textField)

mixin textField(options,mods)
  //- mixin textField(text, name, placeholder, type='TF', state = '', value = '',  mods)

  //- Принимает:
        {
  //-   text    {string} - текст
  //-   name    {string} - значение тега name
  //-   placeholder  {string}
  //-   state  {string} - текс второй метки справа
  //-   type    {string} - тип инпута
  //-   value    {string} - дефолтное значение
        dropList {
          {value : 'value 1', name: 'text of list 1' },
          {value : 'value 2', name: 'text of list 2' }
          
        }
        dropBoxBtn {bool }

        mask : '99.99.9999'
  //-   mods    {string} - список модификаторов
        }
  //- Вызов:
        +textField({
          text: 'Текст',
          name: 'name'
          })

  -
    // список модификаторов
    let allMods = ''
    if(typeof(mods) !== 'undefined' && mods) {
      var modsList = mods.split(',')
      for (var i = 0; i < modsList.length; i++) {
        allMods = allMods + ' textField--' + modsList[i].trim()
      }
    }

    let type = 'TF'
      placeHolder ='ДД.ММ.ГГГГ'
      dropList = []

    if (options.type !== undefined && options.type) {
        type = options.type
      }

    if (typeof(options.placeholder) == 'undefined') {
      options.placeholder = ''
    }

    if (typeof(options.dropDown) !== 'undefined' && options.dropDown){
       dropList = options.dropDown;
       type = 'dropDown'
    }
    
  .textField(class=allMods)
    if (typeof(options.text) != 'undefined')
      label.textField__info #{options.text}
    if (typeof(options.state) != 'undefined')
      label.textField__info.textField__info--state #{options.state}  
    case type
      when 'subscription'
        .textField__rigthArrow
        input.textField__input(name = options.name, placeholder= options.placeholder , value = options.value)
      when 'dropDown'
        .textField__downArrow
        input.textField__input.textField__input--dark75(name = options.name, placeholder= options.placeholder , value =options.value)&attributes(attributes)
        .textField__overlay
          if (dropList.length !== 0)
            for i in dropList
              .textField__overlayItems
                span #{i.name} 
                .textField__overlayItem
                  .textField__Btn(data-minus) -
                  .textField__value #{i.value}
                  .textField__Btn(data-plus) +
            if options.dropBoxBtn
              .textField__overlayItems
                +btn('Очистить', 'cancel, mt16pr2mb5')
                +btn('Применить','noMR , mt16pr2mb5')

      when 'maskDate'
        input.textField__input(name = options.name, placeholder= placeHolder , value = options.value)
      default
        input.textField__input(name = options.name, placeholder= options.placeholder , value = options.value)

    block

